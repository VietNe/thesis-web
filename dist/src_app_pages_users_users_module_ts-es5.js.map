{"version":3,"sources":["webpack:///src/app/pages/users/user-form/user-form.component.html","webpack:///src/app/pages/users/user-form/user-form.component.ts","webpack:///src/app/pages/users/users.component.ts","webpack:///src/app/pages/users/users.component.html","webpack:///src/app/pages/users/users.module.ts"],"names":["UserFormComponent","fb","userService","toastService","localStorageService","stationService","isUpdate","stations","form","group","address","Validators","name","phone","NameDevice","role","email","password","user","patchValue","getAllStation","subscribe","res","data","updateUser","value","_id","success","window","location","reload","createUser","valid","onSubmit","RoleComponent","ActionsComponent","dialogService","open","context","rowData","editUser","UsersComponent","router","settings","actions","add","edit","pager","perPage","columns","title","type","renderComponent","filter","width","source","LocalDataSource","getAllUsers","users","load","createNewUser","routes","path","component","UsersModule","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","NbCardModule","NbTreeGridModule","NbIconModule","NbInputModule","NbButtonModule","NbSelectModule","ThemeModule","Ng2SmartTableModule"],"mappings":"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","file":"src_app_pages_users_users_module_ts-es5.js","sourcesContent":["<div class=\"row\">\n  <div class=\"col-12\">\n    <nb-card>\n      <nb-card-header>\n        <div class=\"h6\">{{ isUpdate ? \"Update\" : \"Create\" }} User</div>\n      </nb-card-header>\n\n      <nb-card-body>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  fullWidth\n                  id=\"name\"\n                  formControlName=\"name\"\n                  placeholder=\"Name\"\n                />\n              </div>\n              <div class=\"form-group\" *ngIf=\"!isUpdate\">\n                <label for=\"password\" class=\"label\">Password</label>\n                <input\n                  type=\"password\"\n                  nbInput\n                  fullWidth\n                  id=\"password\"\n                  formControlName=\"password\"\n                  placeholder=\"Password\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"address\" class=\"label\">Address</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  fullWidth\n                  id=\"address\"\n                  formControlName=\"address\"\n                  placeholder=\"Address\"\n                />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"role\" class=\"label\">Role</label>\n                <nb-select\n                  fullWidth\n                  placeholder=\"Select Role\"\n                  formControlName=\"role\"\n                >\n                  <nb-option value=\"admin\">Admin</nb-option>\n                  <nb-option value=\"user\">User</nb-option>\n                </nb-select>\n              </div>\n            </div>\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\" *ngIf=\"!isUpdate\">\n                <label for=\"email\" class=\"label\">Email address</label>\n                <input\n                  type=\"email\"\n                  nbInput\n                  fullWidth\n                  id=\"email\"\n                  formControlName=\"email\"\n                  placeholder=\"Email\"\n                />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"phone\" class=\"label\">Phone</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  fullWidth\n                  id=\"phone\"\n                  formControlName=\"phone\"\n                  placeholder=\"Phone\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"NameDevice\" class=\"label\">Name Device</label>\n                <nb-select\n                  fullWidth\n                  placeholder=\"Select Name Deivce\"\n                  formControlName=\"NameDevice\"\n                >\n                  <nb-option\n                    *ngFor=\"let station of stations\"\n                    [value]=\"station.NameDevice\"\n                    >{{ station.NameDevice }}</nb-option\n                  >\n                </nb-select>\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" nbButton status=\"danger\">\n            {{ isUpdate ? \"Update\" : \"Create\" }}\n          </button>\n        </form>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { StationService } from \"../../../services/station.service\";\nimport { ToastService } from \"../../../services/toast.service\";\nimport { UserService } from \"../../../services/user.service\";\n\n@Component({\n  selector: \"ngx-user-form\",\n  templateUrl: \"./user-form.component.html\",\n  styleUrls: [\"./user-form.component.scss\"],\n})\nexport class UserFormComponent implements OnInit {\n  @Input() isUpdate = false;\n  @Input() user: User;\n  stations: Station[] = [];\n\n  public form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private toastService: ToastService,\n    private localStorageService: LocalStorageService,\n    private stationService: StationService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.isUpdate) {\n      this.form = this.fb.group({\n        address: [null, [Validators.required]],\n        name: [null, [Validators.required]],\n        phone: [null, [Validators.required]],\n        NameDevice: [null],\n        role: [null],\n      });\n    } else {\n      this.form = this.fb.group({\n        email: [null, [Validators.required]],\n        address: [null, [Validators.required]],\n        name: [null, [Validators.required]],\n        phone: [null, [Validators.required]],\n        NameDevice: [null],\n        role: [null, [Validators.required]],\n        password: [null, [Validators.required]],\n      });\n    }\n    if (this.user && this.isUpdate) {\n      this.form.patchValue(this.user);\n    }\n\n    this.stationService.getAllStation().subscribe((res) => {\n      this.stations = res.data;\n    });\n  }\n\n  public updateUser(): void {\n    this.userService\n      .updateUser(this.form.value, this.user._id)\n      .subscribe((res) => {\n        if (res) {\n          this.toastService.success(\"Update user successful!\");\n          window.location.reload();\n        }\n      });\n  }\n\n  public createUser(): void {\n    this.userService.createUser(this.form.value).subscribe((res) => {\n      if (res) {\n        this.toastService.success(\"Create user successful!\");\n        window.location.reload();\n      }\n    });\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.isUpdate ? this.updateUser() : this.createUser();\n    }\n  }\n}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource, ViewCell } from \"ng2-smart-table\";\nimport { UserService } from \"../../services/user.service\";\nimport { UserFormComponent } from \"./user-form/user-form.component\";\n\n@Component({\n  template: `\n    <div\n      class=\"badge\"\n      [class]=\"value === 'admin' ? 'badge-success' : 'badge-info'\"\n    >\n      {{ value === \"admin\" ? \"Admin\" : \"User\" }}\n    </div>\n  `,\n})\nclass RoleComponent implements ViewCell, OnInit {\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  ngOnInit() {}\n}\n\n@Component({\n  template: `\n    <button size=\"small\" nbButton status=\"primary\" (click)=\"editUser()\">\n      Edit\n    </button>\n  `,\n})\nexport class ActionsComponent implements ViewCell, OnInit {\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  constructor(private dialogService: NbDialogService) {}\n\n  ngOnInit() {}\n\n  editUser() {\n    this.dialogService.open(UserFormComponent, {\n      context: {\n        isUpdate: true,\n        user: this.rowData,\n      },\n    });\n  }\n}\n@Component({\n  selector: \"ngx-users\",\n  templateUrl: \"./users.component.html\",\n  styleUrls: [\"./users.component.scss\"],\n})\nexport class UsersComponent implements OnInit {\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n    },\n\n    pager: {\n      perPage: 6,\n    },\n    columns: {\n      _id: {\n        title: \"Actions\",\n        type: \"custom\",\n        renderComponent: ActionsComponent,\n        filter: false,\n        width: \"70px\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      email: {\n        title: \"Email\",\n        type: \"string\",\n      },\n      NameDevice: {\n        title: \"Name Device\",\n        type: \"string\",\n      },\n      phone: {\n        title: \"Phone\",\n        type: \"string\",\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n      },\n      role: {\n        title: \"Role\",\n        type: \"custom\",\n        renderComponent: RoleComponent,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  private users: User[];\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private dialogService: NbDialogService\n  ) {\n    this.userService.getAllUsers().subscribe((res) => {\n      this.users = res.data;\n      this.source.load(this.users);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  createNewUser() {\n    this.dialogService.open(UserFormComponent);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"d-flex align-items-center justify-content-between\">\n      <div class=\"h5\">Users</div>\n      <button nbButton status=\"primary\" (click)=\"createNewUser()\">\n        Create New\n      </button>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\"> </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ActionsComponent, UsersComponent } from \"./users.component\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbInputModule,\n  NbSelectModule,\n  NbTreeGridModule,\n} from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { ThemeModule } from \"../../@theme/theme.module\";\nimport { UserFormComponent } from \"./user-form/user-form.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: UsersComponent,\n  },\n];\n\n@NgModule({\n  declarations: [UsersComponent, ActionsComponent, UserFormComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSelectModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n  ],\n})\nexport class UsersModule {}\n"]}