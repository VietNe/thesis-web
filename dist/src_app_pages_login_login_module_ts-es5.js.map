{"version":3,"sources":["webpack:///src/app/pages/login/login.component.ts","webpack:///src/app/pages/login/login.component.html","webpack:///src/app/pages/login/login.module.ts","webpack:///src/app/services/auth.service.ts"],"names":["LoginComponent","fb","authService","toastService","localStorageService","router","token","localStorage","getItem","navigate","form","group","email","Validators","password","controls","login","value","subscribe","res","success","user","JSON","stringify","data","valid","onSubmit","routes","path","component","LoginModule","CommonModule","RouterModule","FormsModule","ReactiveFormsModule","NbCardModule","NbInputModule","NbButtonModule","NbLayoutModule","ThemeModule","AuthService","http","authEndpoint","environment","clear","body","post","BaseService"],"mappings":"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","file":"src_app_pages_login_login_module_ts-es5.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { ToastService } from \"../../services/toast.service\";\n\n@Component({\n  selector: \"ngx-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private toastService: ToastService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      this.router.navigate([\"/pages/dashboard\"]);\n    }\n\n    this.form = this.fb.group({\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  get emailCtl(): FormControl {\n    return this.form.controls[\"email\"] as FormControl;\n  }\n\n  get pwdCtl(): FormControl {\n    return this.form.controls[\"password\"] as FormControl;\n  }\n\n  ngOnInit(): void {}\n\n  private login(): void {\n    this.authService.login(this.form.value).subscribe((res: LoginResponse) => {\n      if (res) {\n        this.toastService.success(\"Login successful!\");\n        // localStorage.setItem(\"token\", res.token);\n        // localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n        this.localStorageService.user = JSON.stringify(res.data.user);\n        this.localStorageService.token = JSON.stringify(res.token);\n        this.router.navigate([\"/pages/dashboard\"]);\n      }\n    });\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.login();\n    }\n  }\n}\n","<nb-layout>\n  <nb-layout-column class=\"p-0 max-vw-100 max-vh-100 overflow-hidden\">\n    <div class=\"container-fluid\">\n      <div\n        class=\"row vh-100 d-flex align-items-center justify-content-center login-container\"\n      >\n        <div class=\"col-lg-5 col-12 mh-100 p-5\">\n          <nb-card>\n            <nb-card-body>\n              <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                  <label for=\"email\" class=\"label\">Email address</label>\n                  <input\n                    type=\"email\"\n                    nbInput\n                    fullWidth\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    formControlName=\"email\"\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"password\" class=\"label\">Password</label>\n                  <input\n                    type=\"password\"\n                    nbInput\n                    fullWidth\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    formControlName=\"password\"\n                  />\n                </div>\n\n                <button type=\"submit\" nbButton status=\"danger\">Login</button>\n              </form>\n            </nb-card-body>\n          </nb-card>\n        </div>\n      </div>\n    </div>\n  </nb-layout-column>\n</nb-layout>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbInputModule,\n  NbLayoutModule,\n} from \"@nebular/theme\";\nimport { ThemeModule } from \"../../@theme/theme.module\";\nimport { LoginComponent } from \"./login.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbInputModule,\n    NbButtonModule,\n    NbLayoutModule,\n    ThemeModule,\n  ],\n})\nexport class LoginModule {}\n","import { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { BaseService } from \"./base.service\";\nimport { environment } from \"../../environments/environment\";\nimport { ToastService } from \"./toast.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService extends BaseService {\n  private authEndpoint = `${environment.API_URL}/users`;\n  constructor(\n    http: HttpClient,\n    toastService: ToastService,\n    private router: Router\n  ) {\n    super(http, toastService);\n  }\n\n  public logout(): void {\n    localStorage.clear();\n    this.router.navigate([\"/\"]);\n  }\n\n  public login(body: LoginInput): Observable<LoginResponse> {\n    return this.post(body, `${this.authEndpoint}/login`);\n  }\n}\n"]}