{"version":3,"sources":["webpack:///src/app/pages/stations/stations-routing.module.ts","webpack:///src/app/pages/stations/stations.component.ts","webpack:///src/app/pages/stations/stations.component.html","webpack:///src/app/pages/stations/stations.module.ts"],"names":["routes","path","component","StationsComponent","loadChildren","then","m","StationModule","StationsRoutingModule","RouterModule","AQIComponent","status","rowData","e","AQI_COLORS","value","gt","lte","color","stationService","router","settings","actions","add","edit","pager","perPage","columns","NameDevice","title","type","area","currentAQI","width","renderComponent","source","LocalDataSource","getAllStation","subscribe","res","stations","data","load","event","station","find","s","navigate","_id","onRowSelect","StationsModule","CommonModule","NbCardModule","NbTreeGridModule","NbIconModule","NbInputModule","ThemeModule","Ng2SmartTableModule"],"mappings":"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","file":"src_app_pages_stations_stations_module_ts-es5.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { StationsComponent } from \"./stations.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: StationsComponent,\n  },\n  {\n    path: \":id\",\n    loadChildren: () =>\n      import(\"../station/station.module\").then((m) => m.StationModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class StationsRoutingModule {}\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { LocalDataSource, ViewCell } from \"ng2-smart-table\";\nimport { AQI_COLORS } from \"../../constants/colors\";\nimport { StationService } from \"../../services/station.service\";\n\n@Component({\n  template: `\n    <div class=\"badge\" [style.backgroundColor]=\"aqiColor\">\n      {{ value }}\n    </div>\n  `,\n})\nclass AQIComponent implements ViewCell, OnInit {\n  status: boolean;\n\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  ngOnInit() {\n    this.status = this.rowData?.status;\n  }\n\n  get aqiColor() {\n    const e = AQI_COLORS.find((e) =>\n      this.value > e.gt && e.lte ? this.value <= e.lte : true\n    );\n    if (e) return e.color;\n    return \"#FD0100\";\n  }\n}\n@Component({\n  selector: \"ngx-stations\",\n  templateUrl: \"./stations.component.html\",\n  styleUrls: [\"./stations.component.scss\"],\n})\nexport class StationsComponent implements OnInit {\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n    },\n    pager: {\n      perPage: 6,\n    },\n    columns: {\n      NameDevice: {\n        title: \"Station Name\",\n        type: \"string\",\n      },\n      area: {\n        title: \"Area\",\n        type: \"string\",\n      },\n      currentAQI: {\n        width: \"160px\",\n        title: \"Current AQI\",\n        type: \"custom\",\n        renderComponent: AQIComponent,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  private stations: Station[];\n  constructor(private stationService: StationService, private router: Router) {\n    this.stationService.getAllStation().subscribe((res) => {\n      this.stations = res.data;\n      this.source.load(this.stations);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  public onRowSelect(event: any): void {\n    const { NameDevice } = event?.data;\n    const station = this.stations.find((s) => s.NameDevice === NameDevice);\n    if (station) this.router.navigate([\"pages\", \"stations\", station._id]);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"h5\">Stations</div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table\n      [settings]=\"settings\"\n      [source]=\"source\"\n      (userRowSelect)=\"onRowSelect($event)\"\n    >\n    </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {\n  NbCardModule,\n  NbIconModule,\n  NbInputModule,\n  NbTreeGridModule,\n} from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { ThemeModule } from \"../../@theme/theme.module\";\nimport { StationsRoutingModule } from \"./stations-routing.module\";\nimport { StationsComponent } from \"./stations.component\";\n\n@NgModule({\n  declarations: [StationsComponent],\n  imports: [\n    CommonModule,\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n    StationsRoutingModule,\n  ],\n})\nexport class StationsModule {}\n"]}