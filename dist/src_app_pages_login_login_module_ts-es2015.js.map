{"version":3,"sources":["./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/pages/login/login.module.ts","./src/app/services/auth.service.ts"],"names":[],"mappings":"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","file":"src_app_pages_login_login_module_ts-es2015.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AuthService } from \"../../services/auth.service\";\nimport { LocalStorageService } from \"../../services/local-storage.service\";\nimport { ToastService } from \"../../services/toast.service\";\n\n@Component({\n  selector: \"ngx-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  public form: FormGroup;\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private toastService: ToastService,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      this.router.navigate([\"/pages/dashboard\"]);\n    }\n\n    this.form = this.fb.group({\n      email: [null, [Validators.required, Validators.email]],\n      password: [null, [Validators.required]],\n    });\n  }\n\n  get emailCtl(): FormControl {\n    return this.form.controls[\"email\"] as FormControl;\n  }\n\n  get pwdCtl(): FormControl {\n    return this.form.controls[\"password\"] as FormControl;\n  }\n\n  ngOnInit(): void {}\n\n  private login(): void {\n    this.authService.login(this.form.value).subscribe((res: LoginResponse) => {\n      if (res) {\n        this.toastService.success(\"Login successful!\");\n        localStorage.setItem(\"token\", res.token);\n        // localStorage.setItem(\"user\", JSON.stringify(res.data.user));\n        this.localStorageService.user = JSON.stringify(res.data.user);\n        this.router.navigate([\"/pages/dashboard\"]);\n      }\n    });\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.login();\n    }\n  }\n}\n","<nb-layout>\n  <nb-layout-column class=\"p-0 max-vw-100 max-vh-100 overflow-hidden\">\n    <div class=\"container-fluid\">\n      <div\n        class=\"row vh-100 d-flex align-items-center justify-content-center login-container\"\n      >\n        <div class=\"col-lg-5 col-12 mh-100 p-5\">\n          <nb-card>\n            <nb-card-body>\n              <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                  <label for=\"email\" class=\"label\">Email address</label>\n                  <input\n                    type=\"email\"\n                    nbInput\n                    fullWidth\n                    id=\"email\"\n                    placeholder=\"Email\"\n                    formControlName=\"email\"\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"password\" class=\"label\">Password</label>\n                  <input\n                    type=\"password\"\n                    nbInput\n                    fullWidth\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    formControlName=\"password\"\n                  />\n                </div>\n\n                <button type=\"submit\" nbButton status=\"danger\">Login</button>\n              </form>\n            </nb-card-body>\n          </nb-card>\n        </div>\n      </div>\n    </div>\n  </nb-layout-column>\n</nb-layout>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbInputModule,\n  NbLayoutModule,\n} from \"@nebular/theme\";\nimport { ThemeModule } from \"../../@theme/theme.module\";\nimport { LoginComponent } from \"./login.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: LoginComponent,\n  },\n];\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbInputModule,\n    NbButtonModule,\n    NbLayoutModule,\n    ThemeModule,\n  ],\n})\nexport class LoginModule {}\n","import { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { Router } from \"@angular/router\";\nimport { BaseService } from \"./base.service\";\nimport { environment } from \"../../environments/environment\";\nimport { ToastService } from \"./toast.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class AuthService extends BaseService {\n  private authEndpoint = `${environment.API_URL}/users`;\n  constructor(\n    http: HttpClient,\n    toastService: ToastService,\n    private router: Router\n  ) {\n    super(http, toastService);\n  }\n\n  public logout(): void {\n    localStorage.clear();\n    this.router.navigate([\"/\"]);\n  }\n\n  public login(body: LoginInput): Observable<LoginResponse> {\n    return this.post(body, `${this.authEndpoint}/login`);\n  }\n}\n"],"sourceRoot":"webpack:///"}