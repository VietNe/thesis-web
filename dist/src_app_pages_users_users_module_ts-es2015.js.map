{"version":3,"sources":["./src/app/pages/users/user-form/user-form.component.ts","./src/app/pages/users/user-form/user-form.component.html","./src/app/pages/users/users.component.ts","./src/app/pages/users/users.component.html","./src/app/pages/users/users.module.ts"],"names":[],"mappings":"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","file":"src_app_pages_users_users_module_ts-es2015.js","sourcesContent":["import { Component, Input, OnInit } from \"@angular/core\";\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\nimport { LocalStorageService } from \"../../../services/local-storage.service\";\nimport { StationService } from \"../../../services/station.service\";\nimport { ToastService } from \"../../../services/toast.service\";\nimport { UserService } from \"../../../services/user.service\";\n\n@Component({\n  selector: \"ngx-user-form\",\n  templateUrl: \"./user-form.component.html\",\n  styleUrls: [\"./user-form.component.scss\"],\n})\nexport class UserFormComponent implements OnInit {\n  @Input() isUpdate = false;\n  @Input() user: User;\n  stations: Station[] = [];\n\n  public form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private userService: UserService,\n    private toastService: ToastService,\n    private localStorageService: LocalStorageService,\n    private stationService: StationService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.isUpdate) {\n      this.form = this.fb.group({\n        address: [null, [Validators.required]],\n        name: [null, [Validators.required]],\n        phone: [null, [Validators.required]],\n        NameDevice: [null],\n        role: [null],\n      });\n    } else {\n      this.form = this.fb.group({\n        email: [null, [Validators.required]],\n        address: [null, [Validators.required]],\n        name: [null, [Validators.required]],\n        phone: [null, [Validators.required]],\n        NameDevice: [null],\n        role: [null, [Validators.required]],\n        password: [null, [Validators.required]],\n      });\n    }\n    if (this.user && this.isUpdate) {\n      this.form.patchValue(this.user);\n    }\n\n    this.stationService.getAllStation().subscribe((res) => {\n      this.stations = res.data;\n    });\n  }\n\n  public updateUser(): void {\n    this.userService\n      .updateUser(this.form.value, this.user._id)\n      .subscribe((res) => {\n        if (res) {\n          this.toastService.success(\"Update user successful!\");\n          window.location.reload();\n        }\n      });\n  }\n\n  public createUser(): void {\n    this.userService.createUser(this.form.value).subscribe((res) => {\n      if (res) {\n        this.toastService.success(\"Create user successful!\");\n        window.location.reload();\n      }\n    });\n  }\n\n  public onSubmit(): void {\n    if (this.form.valid) {\n      this.isUpdate ? this.updateUser() : this.createUser();\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12\">\n    <nb-card>\n      <nb-card-header>\n        <div class=\"h6\">{{ isUpdate ? \"Update\" : \"Create\" }} User</div>\n      </nb-card-header>\n\n      <nb-card-body>\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\">\n          <div class=\"row\">\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\">\n                <label for=\"name\" class=\"label\">Name</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  fullWidth\n                  id=\"name\"\n                  formControlName=\"name\"\n                  placeholder=\"Name\"\n                />\n              </div>\n              <div class=\"form-group\" *ngIf=\"!isUpdate\">\n                <label for=\"password\" class=\"label\">Password</label>\n                <input\n                  type=\"password\"\n                  nbInput\n                  fullWidth\n                  id=\"password\"\n                  formControlName=\"password\"\n                  placeholder=\"Password\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"address\" class=\"label\">Address</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  fullWidth\n                  id=\"address\"\n                  formControlName=\"address\"\n                  placeholder=\"Address\"\n                />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"role\" class=\"label\">Role</label>\n                <nb-select\n                  fullWidth\n                  placeholder=\"Select Role\"\n                  formControlName=\"role\"\n                >\n                  <nb-option value=\"admin\">Admin</nb-option>\n                  <nb-option value=\"user\">User</nb-option>\n                </nb-select>\n              </div>\n            </div>\n            <div class=\"col-12 col-lg-6\">\n              <div class=\"form-group\" *ngIf=\"!isUpdate\">\n                <label for=\"email\" class=\"label\">Email address</label>\n                <input\n                  type=\"email\"\n                  nbInput\n                  fullWidth\n                  id=\"email\"\n                  formControlName=\"email\"\n                  placeholder=\"Email\"\n                />\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"phone\" class=\"label\">Phone</label>\n                <input\n                  type=\"text\"\n                  nbInput\n                  fullWidth\n                  id=\"phone\"\n                  formControlName=\"phone\"\n                  placeholder=\"Phone\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label for=\"NameDevice\" class=\"label\">Name Device</label>\n                <nb-select\n                  fullWidth\n                  placeholder=\"Select Name Deivce\"\n                  formControlName=\"NameDevice\"\n                >\n                  <nb-option\n                    *ngFor=\"let station of stations\"\n                    [value]=\"station.NameDevice\"\n                    >{{ station.NameDevice }}</nb-option\n                  >\n                </nb-select>\n              </div>\n            </div>\n          </div>\n\n          <button type=\"submit\" nbButton status=\"danger\">\n            {{ isUpdate ? \"Update\" : \"Create\" }}\n          </button>\n        </form>\n      </nb-card-body>\n    </nb-card>\n  </div>\n</div>\n","import { Component, Input, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NbDialogService } from \"@nebular/theme\";\nimport { LocalDataSource, ViewCell } from \"ng2-smart-table\";\nimport { UserService } from \"../../services/user.service\";\nimport { UserFormComponent } from \"./user-form/user-form.component\";\n\n@Component({\n  template: `\n    <div\n      class=\"badge\"\n      [class]=\"value === 'admin' ? 'badge-success' : 'badge-info'\"\n    >\n      {{ value === \"admin\" ? \"Admin\" : \"User\" }}\n    </div>\n  `,\n})\nclass RoleComponent implements ViewCell, OnInit {\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  ngOnInit() {}\n}\n\n@Component({\n  template: `\n    <button size=\"small\" nbButton status=\"primary\" (click)=\"editUser()\">\n      Edit\n    </button>\n  `,\n})\nexport class ActionsComponent implements ViewCell, OnInit {\n  @Input() value: string | number;\n  @Input() rowData: any;\n\n  constructor(private dialogService: NbDialogService) {}\n\n  ngOnInit() {}\n\n  editUser() {\n    this.dialogService.open(UserFormComponent, {\n      context: {\n        isUpdate: true,\n        user: this.rowData,\n      },\n    });\n  }\n}\n@Component({\n  selector: \"ngx-users\",\n  templateUrl: \"./users.component.html\",\n  styleUrls: [\"./users.component.scss\"],\n})\nexport class UsersComponent implements OnInit {\n  settings = {\n    actions: {\n      add: false,\n      edit: false,\n      delete: false,\n    },\n\n    pager: {\n      perPage: 6,\n    },\n    columns: {\n      _id: {\n        title: \"Actions\",\n        type: \"custom\",\n        renderComponent: ActionsComponent,\n        filter: false,\n        width: \"70px\",\n      },\n      name: {\n        title: \"Name\",\n        type: \"string\",\n      },\n      email: {\n        title: \"Email\",\n        type: \"string\",\n      },\n      NameDevice: {\n        title: \"Name Device\",\n        type: \"string\",\n      },\n      phone: {\n        title: \"Phone\",\n        type: \"string\",\n      },\n      address: {\n        title: \"Address\",\n        type: \"string\",\n      },\n      role: {\n        title: \"Role\",\n        type: \"custom\",\n        renderComponent: RoleComponent,\n      },\n    },\n  };\n\n  source: LocalDataSource = new LocalDataSource();\n  private users: User[];\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private dialogService: NbDialogService\n  ) {\n    this.userService.getAllUsers().subscribe((res) => {\n      this.users = res.data;\n      this.source.load(this.users);\n    });\n  }\n\n  ngOnInit(): void {}\n\n  createNewUser() {\n    this.dialogService.open(UserFormComponent);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"d-flex align-items-center justify-content-between\">\n      <div class=\"h5\">Users</div>\n      <button nbButton status=\"primary\" (click)=\"createNewUser()\">\n        Create New\n      </button>\n    </div>\n  </nb-card-header>\n\n  <nb-card-body>\n    <ng2-smart-table [settings]=\"settings\" [source]=\"source\"> </ng2-smart-table>\n  </nb-card-body>\n</nb-card>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { ActionsComponent, UsersComponent } from \"./users.component\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbInputModule,\n  NbSelectModule,\n  NbTreeGridModule,\n} from \"@nebular/theme\";\nimport { Ng2SmartTableModule } from \"ng2-smart-table\";\nimport { ThemeModule } from \"../../@theme/theme.module\";\nimport { UserFormComponent } from \"./user-form/user-form.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: UsersComponent,\n  },\n];\n\n@NgModule({\n  declarations: [UsersComponent, ActionsComponent, UserFormComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbTreeGridModule,\n    NbIconModule,\n    NbInputModule,\n    NbButtonModule,\n    NbSelectModule,\n    ThemeModule,\n    Ng2SmartTableModule,\n  ],\n})\nexport class UsersModule {}\n"],"sourceRoot":"webpack:///"}